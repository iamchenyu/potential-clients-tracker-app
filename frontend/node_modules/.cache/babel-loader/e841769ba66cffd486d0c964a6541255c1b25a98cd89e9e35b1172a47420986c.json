{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuwang/Storage/Developer/Courses/Springboard/Projects/potential-clients-tracker/frontend/src/clients/clientTabs/clientTabProgress/ClientDetailTabBarProgressDates.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport \"./progress.css\";\nimport { status } from \"../../../helper/formSelectOptions\";\nimport { DialogTitle, DialogContent, Chip, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport PotentialClientTrackerApi from \"../../../api\";\nimport ClientDetailTabBarProgressAddDatesForm from \"./ClientDetailTabBarProgressAddDatesForm\";\nimport ClientDetailTabBarProgressDatesMap from \"./ClientDetailTabBarProgressDatesMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientDetailTabBarProgressDates = _ref => {\n  _s();\n  let {\n    statusMapping,\n    client,\n    updateClient\n  } = _ref;\n  const [clientDetails, setClientDetails] = React.useState(client);\n  const [dummy, setDummy] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [statusId, setStatusId] = React.useState(null);\n  const handleClickOpen = e => {\n    let idStatus;\n    if (!$(e.target)[0].id) {\n      idStatus = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      idStatus = $(e.target)[0].id;\n    }\n    const id = idStatus.split(\"-\")[0];\n    setOpen(true);\n    setStatusId(id);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  React.useEffect(() => {\n    $(\".stepper_item\").map((item, idx) => {\n      if ($(idx).siblings().children().length !== 0) {\n        $(idx).addClass(\"success\");\n      }\n      if ($(idx).siblings().children().length === 0) {\n        $(idx).removeClass(\"success\");\n      }\n    });\n  });\n  React.useEffect(() => {\n    const fetchClient = async id => {\n      const {\n        data\n      } = await PotentialClientTrackerApi.getClient(id);\n      setClientDetails(data.client);\n      updateClient(data.client);\n    };\n    fetchClient(client.id);\n  }, [dummy]);\n  const handleDateDelete = async e => {\n    let id;\n    if (!$(e.target)[0].id) {\n      id = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      id = $(e.target)[0].id;\n    }\n    await PotentialClientTrackerApi.deleteStatus(id);\n    setDummy(!dummy);\n  };\n  const chipstyle = {\n    cursor: \"pointer\",\n    backgroundColor: \"#FFCF1C\",\n    minWidth: \"120px\",\n    fontSize: \"0.9rem\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    height: \"32px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    borderRadius: \"16px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        fontSize: \"1.5rem\",\n        marginTop: \"15px\"\n      },\n      children: \"Client Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deal-view\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stepper\",\n          children: status.map(s => /*#__PURE__*/_jsxDEV(ClientDetailTabBarProgressDatesMap, {\n            s: status,\n            client: client,\n            updateClient: updateClient\n          }, s.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n          // <div key={s.value}>\n          //   <div className=\"stepper_item_date\">\n          //     <div\n          //       className=\"stepper_item \"\n          //       onClick={handleClickOpen}\n          //       id={`${s.value}-status`}\n          //     >\n          //       <div className=\"stepper_title\">{s.label}</div>\n          //     </div>\n          //     <div className=\"stepper_date\">\n          //       {clientDetails.status_updated_dates\n          //         ? clientDetails.status_updated_dates.map((date) => {\n          //             if (statusMapping[date.status_id] === s.label) {\n          //               return (\n          //                 <div\n          //                   style={chipstyle}\n          //                   onClick={handleDateDelete}\n          //                   id={date.id}\n          //                   key={date.id}\n          //                 >\n          //                   {moment(date.update_date).format(\"MM-DD-YYYY\")}\n\n          //                   <CloseIcon\n          //                     fontSize=\"sm\"\n          //                     sx={{ marginTop: \"2px\" }}\n          //                   />\n          //                 </div>\n          //               );\n          //             }\n          //           })\n          //         : null}\n          //     </div>\n          //   </div>\n          //   <Divider sx={{ my: \"10px\" }} />\n          //   <ClientDetailTabBarProgressAddDatesForm\n          //     open={open}\n          //     handleClose={handleClose}\n          //     client={clientDetails}\n          //     statusId={statusId}\n          //     statusMapping={statusMapping}\n          //     setClientDetails={setClientDetails}\n          //     updateClient={updateClient}\n          //   />\n          // </div>\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClientDetailTabBarProgressDates, \"mqp/sLmu62T01uWfhOeEu4yXTvY=\");\n_c = ClientDetailTabBarProgressDates;\nexport default ClientDetailTabBarProgressDates;\nvar _c;\n$RefreshReg$(_c, \"ClientDetailTabBarProgressDates\");","map":{"version":3,"names":["React","status","DialogTitle","DialogContent","Chip","Divider","CloseIcon","moment","$","PotentialClientTrackerApi","ClientDetailTabBarProgressAddDatesForm","ClientDetailTabBarProgressDatesMap","ClientDetailTabBarProgressDates","statusMapping","client","updateClient","clientDetails","setClientDetails","useState","dummy","setDummy","open","setOpen","statusId","setStatusId","handleClickOpen","e","idStatus","target","id","parentElement","split","handleClose","useEffect","map","item","idx","siblings","children","length","addClass","removeClass","fetchClient","data","getClient","handleDateDelete","deleteStatus","chipstyle","cursor","backgroundColor","minWidth","fontSize","display","alignItems","justifyContent","gap","height","color","borderRadius","marginTop","s"],"sources":["/Users/chenyuwang/Storage/Developer/Courses/Springboard/Projects/potential-clients-tracker/frontend/src/clients/clientTabs/clientTabProgress/ClientDetailTabBarProgressDates.js"],"sourcesContent":["import * as React from \"react\";\nimport \"./progress.css\";\nimport { status } from \"../../../helper/formSelectOptions\";\nimport { DialogTitle, DialogContent, Chip, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport PotentialClientTrackerApi from \"../../../api\";\nimport ClientDetailTabBarProgressAddDatesForm from \"./ClientDetailTabBarProgressAddDatesForm\";\nimport ClientDetailTabBarProgressDatesMap from \"./ClientDetailTabBarProgressDatesMap\";\n\nconst ClientDetailTabBarProgressDates = ({\n  statusMapping,\n  client,\n  updateClient,\n}) => {\n  const [clientDetails, setClientDetails] = React.useState(client);\n  const [dummy, setDummy] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [statusId, setStatusId] = React.useState(null);\n\n  const handleClickOpen = (e) => {\n    let idStatus;\n    if (!$(e.target)[0].id) {\n      idStatus = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      idStatus = $(e.target)[0].id;\n    }\n    const id = idStatus.split(\"-\")[0];\n    setOpen(true);\n    setStatusId(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    $(\".stepper_item\").map((item, idx) => {\n      if ($(idx).siblings().children().length !== 0) {\n        $(idx).addClass(\"success\");\n      }\n      if ($(idx).siblings().children().length === 0) {\n        $(idx).removeClass(\"success\");\n      }\n    });\n  });\n\n  React.useEffect(() => {\n    const fetchClient = async (id) => {\n      const { data } = await PotentialClientTrackerApi.getClient(id);\n      setClientDetails(data.client);\n      updateClient(data.client);\n    };\n    fetchClient(client.id);\n  }, [dummy]);\n\n  const handleDateDelete = async (e) => {\n    let id;\n    if (!$(e.target)[0].id) {\n      id = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      id = $(e.target)[0].id;\n    }\n    await PotentialClientTrackerApi.deleteStatus(id);\n    setDummy(!dummy);\n  };\n\n  const chipstyle = {\n    cursor: \"pointer\",\n    backgroundColor: \"#FFCF1C\",\n    minWidth: \"120px\",\n    fontSize: \"0.9rem\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    height: \"32px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    borderRadius: \"16px\",\n  };\n\n  return (\n    <>\n      <DialogTitle sx={{ fontSize: \"1.5rem\", marginTop: \"15px\" }}>\n        Client Progress\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"deal-view\">\n          <div className=\"stepper\">\n            {status.map((s) => (\n              <ClientDetailTabBarProgressDatesMap\n                key={s.id}\n                s={status}\n                client={client}\n                updateClient={updateClient}\n              />\n              // <div key={s.value}>\n              //   <div className=\"stepper_item_date\">\n              //     <div\n              //       className=\"stepper_item \"\n              //       onClick={handleClickOpen}\n              //       id={`${s.value}-status`}\n              //     >\n              //       <div className=\"stepper_title\">{s.label}</div>\n              //     </div>\n              //     <div className=\"stepper_date\">\n              //       {clientDetails.status_updated_dates\n              //         ? clientDetails.status_updated_dates.map((date) => {\n              //             if (statusMapping[date.status_id] === s.label) {\n              //               return (\n              //                 <div\n              //                   style={chipstyle}\n              //                   onClick={handleDateDelete}\n              //                   id={date.id}\n              //                   key={date.id}\n              //                 >\n              //                   {moment(date.update_date).format(\"MM-DD-YYYY\")}\n\n              //                   <CloseIcon\n              //                     fontSize=\"sm\"\n              //                     sx={{ marginTop: \"2px\" }}\n              //                   />\n              //                 </div>\n              //               );\n              //             }\n              //           })\n              //         : null}\n              //     </div>\n              //   </div>\n              //   <Divider sx={{ my: \"10px\" }} />\n              //   <ClientDetailTabBarProgressAddDatesForm\n              //     open={open}\n              //     handleClose={handleClose}\n              //     client={clientDetails}\n              //     statusId={statusId}\n              //     statusMapping={statusMapping}\n              //     setClientDetails={setClientDetails}\n              //     updateClient={updateClient}\n              //   />\n              // </div>\n            ))}\n          </div>\n        </div>\n      </DialogContent>\n    </>\n  );\n};\n\nexport default ClientDetailTabBarProgressDates;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}