{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuwang/Storage/Developer/Courses/Springboard/Projects/potential-clients-tracker/frontend/src/clients/clientTabs/clientTabProgress/ClientDetailTabBarProgressDatesMap.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport \"./progress.css\";\nimport { status } from \"../../../helper/formSelectOptions\";\nimport { DialogTitle, DialogContent, Chip, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport PotentialClientTrackerApi from \"../../../api\";\nimport ClientDetailTabBarProgressAddDatesForm from \"./ClientDetailTabBarProgressAddDatesForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientDetailTabBarProgressDatesMap = _ref => {\n  _s();\n  let {\n    s,\n    client,\n    updateClient\n  } = _ref;\n  const [clientDetails, setClientDetails] = React.useState(client);\n  const [dummy, setDummy] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [statusId, setStatusId] = React.useState(null);\n  const handleClickOpen = e => {\n    let idStatus;\n    if (!$(e.target)[0].id) {\n      idStatus = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      idStatus = $(e.target)[0].id;\n    }\n    const id = idStatus.split(\"-\")[0];\n    setOpen(true);\n    setStatusId(id);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  React.useEffect(() => {\n    $(\".stepper_item\").map((item, idx) => {\n      if ($(idx).siblings().children().length !== 0) {\n        $(idx).addClass(\"success\");\n      }\n      if ($(idx).siblings().children().length === 0) {\n        $(idx).removeClass(\"success\");\n      }\n    });\n  });\n  React.useEffect(() => {\n    const fetchClient = async id => {\n      const {\n        data\n      } = await PotentialClientTrackerApi.getClient(id);\n      setClientDetails(data.client);\n      updateClient(data.client);\n    };\n    fetchClient(client.id);\n  }, [dummy]);\n  const handleDateDelete = async e => {\n    let id;\n    if (!$(e.target)[0].id) {\n      id = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      id = $(e.target)[0].id;\n    }\n    await PotentialClientTrackerApi.deleteStatus(id);\n    setDummy(!dummy);\n  };\n  const chipstyle = {\n    cursor: \"pointer\",\n    backgroundColor: \"#FFCF1C\",\n    minWidth: \"120px\",\n    fontSize: \"0.9rem\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    height: \"32px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    borderRadius: \"16px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stepper_item_date\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stepper_item \",\n        onClick: handleClickOpen,\n        id: `${s.value}-status`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stepper_title\",\n          children: s.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stepper_date\",\n        children: clientDetails.status_updated_dates ? clientDetails.status_updated_dates.map(date => {\n          if (statusMapping[date.status_id] === s.label) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: chipstyle,\n              onClick: handleDateDelete,\n              id: date.id,\n              children: [moment(date.update_date).format(\"MM-DD-YYYY\"), /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"sm\",\n                sx: {\n                  marginTop: \"2px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this)]\n            }, date.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this);\n          }\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClientDetailTabBarProgressAddDatesForm, {\n      open: open,\n      handleClose: handleClose,\n      client: clientDetails,\n      statusId: statusId,\n      statusMapping: statusMapping,\n      setClientDetails: setClientDetails,\n      updateClient: updateClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClientDetailTabBarProgressDatesMap, \"mqp/sLmu62T01uWfhOeEu4yXTvY=\");\n_c = ClientDetailTabBarProgressDatesMap;\nexport default ClientDetailTabBarProgressDatesMap;\nvar _c;\n$RefreshReg$(_c, \"ClientDetailTabBarProgressDatesMap\");","map":{"version":3,"names":["React","status","DialogTitle","DialogContent","Chip","Divider","CloseIcon","moment","$","PotentialClientTrackerApi","ClientDetailTabBarProgressAddDatesForm","ClientDetailTabBarProgressDatesMap","s","client","updateClient","clientDetails","setClientDetails","useState","dummy","setDummy","open","setOpen","statusId","setStatusId","handleClickOpen","e","idStatus","target","id","parentElement","split","handleClose","useEffect","map","item","idx","siblings","children","length","addClass","removeClass","fetchClient","data","getClient","handleDateDelete","deleteStatus","chipstyle","cursor","backgroundColor","minWidth","fontSize","display","alignItems","justifyContent","gap","height","color","borderRadius","value","label","status_updated_dates","date","statusMapping","status_id","update_date","format","marginTop","my"],"sources":["/Users/chenyuwang/Storage/Developer/Courses/Springboard/Projects/potential-clients-tracker/frontend/src/clients/clientTabs/clientTabProgress/ClientDetailTabBarProgressDatesMap.js"],"sourcesContent":["import * as React from \"react\";\nimport \"./progress.css\";\nimport { status } from \"../../../helper/formSelectOptions\";\nimport { DialogTitle, DialogContent, Chip, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport PotentialClientTrackerApi from \"../../../api\";\nimport ClientDetailTabBarProgressAddDatesForm from \"./ClientDetailTabBarProgressAddDatesForm\";\n\nconst ClientDetailTabBarProgressDatesMap = ({ s, client, updateClient }) => {\n  const [clientDetails, setClientDetails] = React.useState(client);\n  const [dummy, setDummy] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [statusId, setStatusId] = React.useState(null);\n\n  const handleClickOpen = (e) => {\n    let idStatus;\n    if (!$(e.target)[0].id) {\n      idStatus = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      idStatus = $(e.target)[0].id;\n    }\n    const id = idStatus.split(\"-\")[0];\n    setOpen(true);\n    setStatusId(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    $(\".stepper_item\").map((item, idx) => {\n      if ($(idx).siblings().children().length !== 0) {\n        $(idx).addClass(\"success\");\n      }\n      if ($(idx).siblings().children().length === 0) {\n        $(idx).removeClass(\"success\");\n      }\n    });\n  });\n\n  React.useEffect(() => {\n    const fetchClient = async (id) => {\n      const { data } = await PotentialClientTrackerApi.getClient(id);\n      setClientDetails(data.client);\n      updateClient(data.client);\n    };\n    fetchClient(client.id);\n  }, [dummy]);\n\n  const handleDateDelete = async (e) => {\n    let id;\n    if (!$(e.target)[0].id) {\n      id = $($(e.target)[0].parentElement)[0].id;\n    } else {\n      id = $(e.target)[0].id;\n    }\n    await PotentialClientTrackerApi.deleteStatus(id);\n    setDummy(!dummy);\n  };\n\n  const chipstyle = {\n    cursor: \"pointer\",\n    backgroundColor: \"#FFCF1C\",\n    minWidth: \"120px\",\n    fontSize: \"0.9rem\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    height: \"32px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    borderRadius: \"16px\",\n  };\n\n  return (\n    <>\n      <div className=\"stepper_item_date\">\n        <div\n          className=\"stepper_item \"\n          onClick={handleClickOpen}\n          id={`${s.value}-status`}\n        >\n          <div className=\"stepper_title\">{s.label}</div>\n        </div>\n        <div className=\"stepper_date\">\n          {clientDetails.status_updated_dates\n            ? clientDetails.status_updated_dates.map((date) => {\n                if (statusMapping[date.status_id] === s.label) {\n                  return (\n                    <div\n                      style={chipstyle}\n                      onClick={handleDateDelete}\n                      id={date.id}\n                      key={date.id}\n                    >\n                      {moment(date.update_date).format(\"MM-DD-YYYY\")}\n\n                      <CloseIcon fontSize=\"sm\" sx={{ marginTop: \"2px\" }} />\n                    </div>\n                  );\n                }\n              })\n            : null}\n        </div>\n      </div>\n      <Divider sx={{ my: \"10px\" }} />\n      <ClientDetailTabBarProgressAddDatesForm\n        open={open}\n        handleClose={handleClose}\n        client={clientDetails}\n        statusId={statusId}\n        statusMapping={statusMapping}\n        setClientDetails={setClientDetails}\n        updateClient={updateClient}\n      />\n    </>\n  );\n};\n\nexport default ClientDetailTabBarProgressDatesMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}